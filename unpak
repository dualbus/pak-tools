#!/bin/bash

# Copyright (c) 2014, Eduardo Bustamante
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# PAK unarchiver
#
# Author: Eduardo Bustamante (dualbus)
# Usage: unpak archive.pak

file-slice() {
  dd bs=1c if="$1" skip="$2" count="$3" 2>/dev/null
}

read-int32-le() {
  local o1 o2 o3 o4
  read -r o1 o2 o3 o4 < <(file-slice "$1" "$2" 4 | od -v -tu1 -An)
  printf %u\\n "$((o4 << 24 | o3 << 16 | o2 << 8 | o1))"
}


archive=$1

id=$(     file-slice    "$archive" 0 4)
offset=$( read-int32-le "$archive" 4  )
size=$(   read-int32-le "$archive" 8  )

count=$((size / 64))
for ((i = 0; i < count; i++)); do
  IFS= read -rd '' file_name < \
              <(file-slice    "$archive" $((offset + 64 * i     )) 64 )
  file_offset=$(read-int32-le "$archive" $((offset + 64 * i + 56))    )
  file_size=$(  read-int32-le "$archive" $((offset + 64 * i + 60))    )

  if [[ $file_name = */* ]]; then
    file_path=${file_name%/*}
    mkdir -p "$file_path"
  fi

  file-slice "$archive" "$file_offset" "$file_size" > "$file_name"
done
